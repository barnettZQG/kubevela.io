(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[6235],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(i,".").concat(f)]||m[f]||u[f]||r;return n?o.createElement(d,p(p({ref:t},c),{},{components:n})):o.createElement(d,p({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,p=new Array(r);p[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,p[1]=l;for(var s=2;s<r;s++)p[s]=n[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},57216:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return l},toc:function(){return i},default:function(){return c}});var o=n(22122),a=n(19756),r=(n(67294),n(3905)),p={title:"Data Flow"},l={unversionedId:"platform-engineers/workflow/data-flow",id:"platform-engineers/workflow/data-flow",isDocsHomePage:!1,title:"Data Flow",description:"What's Data Flow",source:"@site/docs/platform-engineers/workflow/data-flow.md",sourceDirName:"platform-engineers/workflow",slug:"/platform-engineers/workflow/data-flow",permalink:"/docs/next/platform-engineers/workflow/data-flow",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/en/platform-engineers/workflow/data-flow.md",version:"current",lastUpdatedBy:"Hongchao Deng",lastUpdatedAt:1629285729,formattedLastUpdatedAt:"8/18/2021",frontMatter:{title:"Data Flow"},sidebar:"docs",previous:{title:"Workflow Context",permalink:"/docs/next/platform-engineers/workflow/context"},next:{title:"CUE Actions",permalink:"/docs/next/platform-engineers/workflow/cue-actions"}},i=[{value:"What&#39;s Data Flow",id:"whats-data-flow",children:[]},{value:"Outputs",id:"outputs",children:[]},{value:"Inputs",id:"inputs",children:[]}],s={toc:i};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"whats-data-flow"},"What's Data Flow"),(0,r.kt)("p",null,"In KubeVela, data flow enables users to pass data from one workflow step to another.\nYou can orchestrate the data flow by specifying declarative config -- inputs and outputs of each step.\nThis doc will explain how to specify data inputs and outputs."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Full example available at: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/oam-dev/kubevela/blob/master/docs/examples/workflow"},"https://github.com/oam-dev/kubevela/blob/master/docs/examples/workflow"))),(0,r.kt)("h2",{id:"outputs"},"Outputs"),(0,r.kt)("p",null,"An output exports the data corresponding to a key in the CUE template of a workflow step.\nOnce the workflow step has finished running, the output will have the data from the key."),(0,r.kt)("p",null,"Here is an example to specify the output in Application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nspec:\n  ...\n  workflow:\n    steps:\n      - name: deploy-server1\n        type: apply-component\n        properties:\n          component: "server1"\n        outputs:\n          - name: server1IP\n            # Any key can be exported from the CUE template of the Definition\n            exportKey: "myIP"\n')),(0,r.kt)("p",null,"Here is an example CUE template that contains the export key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: apply-component\nspec:\n  schematic:\n    cue:\n      template: |\n        import ("vela/op")\n        parameter: {\n          component: string\n        }\n        // load component from application\n        component: op.#Load & {\n          component: parameter.component\n        }\n        // apply workload to kubernetes cluster\n        apply: op.#ApplyComponent & {\n          component: parameter.component\n        }\n        // export podIP\n        myIP: apply.workload.status.podIP\n')),(0,r.kt)("p",null,"The output can then be used by the input in the following."),(0,r.kt)("h2",{id:"inputs"},"Inputs"),(0,r.kt)("p",null,"An input takes the data of an output to fill a parameter in the CUE template of a workflow step.\nThe parameter will be filled before running the workflow step."),(0,r.kt)("p",null,"Here is an example to specify the input in Application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'kind: Application\nspec:\n  ...\n  workflow:\n    steps:\n      ...\n      - name: deploy-server2\n        type: apply-with-ip\n        inputs:\n          - from: server1IP\n            parameterKey: serverIP\n        properties:\n          component: "server2"\n')),(0,r.kt)("p",null,"Here is an example CUE template that takes the input parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: apply-with-ip\nspec:\n  schematic:\n    cue:\n      template: |\n        import ("vela/op")\n        parameter: {\n          component: string\n          // the input value will be used to fill this parameter\n          serverIP?: string\n        }\n        // load component from application\n        component: op.#Load & {\n          component: parameter.component\n          value: {}\n        }\n        // apply workload to kubernetes cluster\n        apply: op.#Apply & {\n          value: {\n            component.value.workload\n            metadata: name: parameter.component\n            if parameter.serverIP!=_|_{\n              // this data will override the env fields of the workload container\n              spec: containers: [{env: [{name: "PrefixIP",value: parameter.serverIP}]}]\n            }\n          }\n        }\n        // wait until workload.status equal "Running"\n        wait: op.#ConditionalWait & {\n          continue: apply.value.status.phase =="Running"\n        }\n')))}c.isMDXComponent=!0}}]);
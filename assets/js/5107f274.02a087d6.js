(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[5452],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,l(l({ref:t},s),{},{components:n})):r.createElement(h,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},31314:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p},default:function(){return s}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),l={title:"Helm"},i={unversionedId:"end-user/components/helm",id:"end-user/components/helm",isDocsHomePage:!1,title:"Helm",description:"KubeVela's Helm component meets the needs of users to connect to Helm Chart. You can deploy any ready-made Helm chart software package from Helm Repo, Git Repo or OSS bucket through the Helm component, and overwrite its parameters.",source:"@site/docs/end-user/components/helm.md",sourceDirName:"end-user/components",slug:"/end-user/components/helm",permalink:"/docs/next/end-user/components/helm",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/en/end-user/components/helm.md",version:"current",lastUpdatedBy:"Jianbo Sun",lastUpdatedAt:1630935267,formattedLastUpdatedAt:"9/6/2021",frontMatter:{title:"Helm"},sidebar:"docs",previous:{title:"Application",permalink:"/docs/next/core-concepts/application"},next:{title:"Kustomize",permalink:"/docs/next/end-user/components/kustomize"}},p=[{value:"Deploy From Helm Repo",id:"deploy-from-helm-repo",children:[{value:"Attributes",id:"attributes",children:[]}]},{value:"Deploy From OSS bucket",id:"deploy-from-oss-bucket",children:[]},{value:"Deploy From Git Repo",id:"deploy-from-git-repo",children:[]}],c={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"KubeVela's Helm component meets the needs of users to connect to Helm Chart. You can deploy any ready-made Helm chart software package from Helm Repo, Git Repo or OSS bucket through the Helm component, and overwrite its parameters."),(0,o.kt)("h2",{id:"deploy-from-helm-repo"},"Deploy From Helm Repo"),(0,o.kt)("p",null,"In this ",(0,o.kt)("inlineCode",{parentName:"p"},"Application"),", we hope to deliver a component called redis-comp. It is a chart from the ",(0,o.kt)("a",{parentName:"p",href:"https://charts.bitnami.com/bitnami"},"bitnami"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cat <<EOF | kubectl apply -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-delivering-chart\nspec:\n  components:\n    - name: redis-comp\n      type: helm\n      properties:\n        chart: redis-cluster\n        version: 6.2.7\n        url: https://charts.bitnami.com/bitnami\n        repoType: helm\nEOF\n")),(0,o.kt)("p",null,"Please copy the above code block and deploy it directly to the runtime cluster:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"application.core.oam.dev/app-delivering-chart created\n")),(0,o.kt)("p",null,"Finally, we use ",(0,o.kt)("inlineCode",{parentName:"p"},"vela ls")," to view the application status after successful delivery:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"APP                     COMPONENT   TYPE        TRAITS  PHASE   HEALTHY STATUS  CREATED-TIME                 \napp-delivering-chart    redis-comp  helm                running healthy         2021-08-28 18:48:21 +0800 CST\n")),(0,o.kt)("p",null,"We also see that the PHASE of the app-delivering-chart APP is running and the STATUS is healthy."),(0,o.kt)("h3",{id:"attributes"},"Attributes"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"repoType"),(0,o.kt)("td",{parentName:"tr",align:null},"required, indicates where it's from"),(0,o.kt)("td",{parentName:"tr",align:null},"Helm")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"pullInterval"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, synchronize with Helm Repo, tunning interval and 5 minutes by default"),(0,o.kt)("td",{parentName:"tr",align:null},"10m")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"url"),(0,o.kt)("td",{parentName:"tr",align:null},"required, Helm Reop address, it supports http/https"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://charts.bitnami.com/bitnami"},"https://charts.bitnami.com/bitnami"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"secretRef"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, The name of the Secret object that holds the credentials required to pull the repo. The username and password fields must be included in the HTTP/S basic authentication Secret. For TLS the secret must contain a certFile and keyFile, and/or caCert fields. For TLS authentication, the secret must contain a certFile / keyFile field and/or caCert field."),(0,o.kt)("td",{parentName:"tr",align:null},"sec-name")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"timeout"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, timeout for pulling repo index"),(0,o.kt)("td",{parentName:"tr",align:null},"60s")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"chart"),(0,o.kt)("td",{parentName:"tr",align:null},"required, chart title"),(0,o.kt)("td",{parentName:"tr",align:null},"redis-cluster")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"version"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, chart version, * by default"),(0,o.kt)("td",{parentName:"tr",align:null},"6.2.7")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"targetNamespace"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, the namespace to install chart, decided by chart itself"),(0,o.kt)("td",{parentName:"tr",align:null},"your-ns")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"releaseName"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, release name after installed"),(0,o.kt)("td",{parentName:"tr",align:null},"your-rn")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"values"),(0,o.kt)("td",{parentName:"tr",align:null},"optional, override the Values.yaml inchart, using for the rendering of Helm"),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("h2",{id:"deploy-from-oss-bucket"},"Deploy From OSS bucket"),(0,o.kt)("p",null,"| Parameters | Description | Example |\n| ---------- | ----------- | ------- ||\n| repoType        | required, indicates where it's from                                                                                             | oss                         |\n| pullInterval    | optional, synchronize with bucket, tunning interval and 5 minutes by default                                                    | 10m                         |\n| url             | required, bucket's endpoint and no need to fill in with scheme                                                                  | oss-cn-beijing.aliyuncs.com |\n| secretRef       | optional, Save the name of a Secret, which is the credential to read the bucket. Secret contains accesskey and secretkey fields | sec-name                    |\n| timeout         | optional, The timeout period of the download operation, the default is 20s                                                      | 60s                         |\n| chart           | required, Chart storage path (key)                                                                                              | ./chart/podinfo-5.1.3.tgz   |\n| version         | optional, In OSS source, this parameter has no effect                                                                           |                             |\n| targetNamespace | optional, The namespace of the installed chart, which is determined by the chart itself by default                              | your-ns                     |\n| releaseName     | optional, Installed release name                                                                                                | your-rn                     |\n| values          | optional, Overwrite the Values.yaml of the chart for Helm rendering.                                                            |                             |\n| oss.bucketName  | required, bucket name                                                                                                           | your-bucket                 |\n| oss.provider    | optional, Optional generic or aws, fill in aws if the certificate is obtained from aws EC2. The default is generic.             | generic                     |\n| oss.region      | optional, bucket region                                                                                                         |                             |"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"How-to")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"(Opentional) If your OSS bucket needs identity verification, create a Secret:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl create secret generic bucket-secret --from-literal=accesskey=<your-ak> --from-literal=secretkey=<your-sk>\nsecret/bucket-secret created\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: helm\n      properties:\n        repoType: oss\n        # required if bucket is private\n        secretRef: bucket-secret\n        chart: ./chart/podinfo-5.1.3.tgz\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n            bucketName: definition-registry\n")),(0,o.kt)("h2",{id:"deploy-from-git-repo"},"Deploy From Git Repo"),(0,o.kt)("p",null,"| Parameters | Description | Example |\n| ---------- | ----------- | ------- ||\n| repoType        | required, indicates where it's from                                                                                                                                                                                                                                                           | git                                             |\n| pullInterval    | optional, synchronize with Git Repo, tunning interval and 5 minutes by default                                                                                                                                                                                                                | 10m                                             |\n| url             | required, Git Repo address                                                                                                                                                                                                                                                                    | ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/oam-dev/terraform-controller"},"https://github.com/oam-dev/terraform-controller")," |\n| secretRef       | optional, The name of the Secret object that holds the credentials required to pull the Git repository. For HTTP/S basic authentication, the Secret must contain the username and password fields. For SSH authentication, the identity, identity.pub and known_hosts fields must be included | sec-name                                        |\n| timeout         | optional, The timeout period of the download operation, the default is 20s                                                                                                                                                                                                                    | 60s                                             |\n| chart           | required, Chart storage path (key)                                                                                                                                                                                                                                                            | ./chart/podinfo-5.1.3.tgz                       |\n| version         | optional, In Git source, this parameter has no effect                                                                                                                                                                                                                                         |                                                 |\n| targetNamespace | optional, the namespace to install chart, decided by chart itself                                                                                                                                                                                                                             | your-ns                                         |\n| releaseName     | optional, Installed release name                                                                                                                                                                                                                                                              | your-rn                                         |\n| values          | optional, Overwrite the Values.yaml of the chart for Helm rendering.                                                                                                                                                                                                                          |                                                 |\n| git.branch      | optional, Git branch, master by default                                                                                                                                                                                                                                                       | dev                                             |"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"How-to")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: app-delivering-chart\nspec:\n   components:\n     - name: terraform-controller\n       type: helm\n       properties:\n          repoType: git\n          url: https://github.com/oam-dev/terraform-controller\n          chart: ./chart\n          git:\n            branch: master\n")))}s.isMDXComponent=!0}}]);
(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[5330],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54076:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return l}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),i={title:"AutoScaler"},c={unversionedId:"end-user/traits/autoscaler",id:"end-user/traits/autoscaler",isDocsHomePage:!1,title:"AutoScaler",description:"Specification",source:"@site/docs/end-user/traits/autoscaler.md",sourceDirName:"end-user/traits",slug:"/end-user/traits/autoscaler",permalink:"/docs/next/end-user/traits/autoscaler",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/en/end-user/traits/autoscaler.md",version:"current",lastUpdatedBy:"Wei (\u6bb5\u5c11)",lastUpdatedAt:1630581616,formattedLastUpdatedAt:"9/2/2021",frontMatter:{title:"AutoScaler"},sidebar:"docs",previous:{title:"Want More\uff1f",permalink:"/docs/next/end-user/components/more"},next:{title:"Ingress",permalink:"/docs/next/end-user/traits/ingress"}},s=[{value:"Specification",id:"specification",children:[]},{value:"How to use",id:"how-to-use",children:[]}],u={toc:s};function l(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"specification"},"Specification"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ vela show cpuscaler\n# Properties\n+---------+---------------------------------------------------------------------------------+------+----------+---------+\n|  NAME   |                                   DESCRIPTION                                   | TYPE | REQUIRED | DEFAULT |\n+---------+---------------------------------------------------------------------------------+------+----------+---------+\n| min     | Specify the minimal number of replicas to which the autoscaler can scale down   | int  | true     |       1 |\n| max     | Specify the maximum number of of replicas to which the autoscaler can scale up  | int  | true     |      10 |\n| cpuUtil | Specify the average cpu utilization, for example, 50 means the CPU usage is 50% | int  | true     |      50 |\n+---------+---------------------------------------------------------------------------------+------+----------+---------+\n")),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# sample.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend              # This is the component I want to deploy\n      type: webservice\n      properties:\n        image: nginx\n      traits:\n        - type: cpuscaler         # Automatically scale the component by CPU usage after deployed\n          properties:\n            min: 1\n            max: 10\n            cpuPercent: 60\n")))}l.isMDXComponent=!0}}]);
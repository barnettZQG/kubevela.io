(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[8470],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(n),f=a,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4352:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l},default:function(){return s}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={title:"AutoScaler"},c={unversionedId:"platform-engineers/traits/built-in/autoscaler",id:"platform-engineers/traits/built-in/autoscaler",isDocsHomePage:!1,title:"AutoScaler",description:"Specification",source:"@site/docs/platform-engineers/traits/built-in/autoscaler.md",sourceDirName:"platform-engineers/traits/built-in",slug:"/platform-engineers/traits/built-in/autoscaler",permalink:"/docs/next/platform-engineers/traits/built-in/autoscaler",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/en/platform-engineers/traits/built-in/autoscaler.md",version:"current",lastUpdatedBy:"Jianbo Sun",lastUpdatedAt:1630393813,formattedLastUpdatedAt:"8/31/2021",frontMatter:{title:"AutoScaler"},sidebar:"docs",previous:{title:"Manual Scaler",permalink:"/docs/next/platform-engineers/traits/built-in/manual-scaler"},next:{title:"Labels and Annotations",permalink:"/docs/next/platform-engineers/traits/built-in/annotations-and-labels"}},l=[{value:"Specification",id:"specification",children:[]},{value:"How to use",id:"how-to-use",children:[]}],u={toc:l};function s(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"specification"},"Specification"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ vela show cpuscaler\n# Properties\n+---------+---------------------------------------------------------------------------------+------+----------+---------+\n|  NAME   |                                   DESCRIPTION                                   | TYPE | REQUIRED | DEFAULT |\n+---------+---------------------------------------------------------------------------------+------+----------+---------+\n| min     | Specify the minimal number of replicas to which the autoscaler can scale down   | int  | true     |       1 |\n| max     | Specify the maximum number of of replicas to which the autoscaler can scale up  | int  | true     |      10 |\n| cpuUtil | Specify the average cpu utilization, for example, 50 means the CPU usage is 50% | int  | true     |      50 |\n+---------+---------------------------------------------------------------------------------+------+----------+---------+\n")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# sample.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend              # This is the component I want to deploy\n      type: webservice\n      properties:\n        image: nginx\n      traits:\n        - type: cpuscaler         # Automatically scale the component by CPU usage after deployed\n          properties:\n            min: 1\n            max: 10\n            cpuPercent: 60\n")))}s.isMDXComponent=!0}}]);